// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package ws

import (
	"github.com/mailru/easyjson/jlexer"
	"github.com/mailru/easyjson/jwriter"
)

func (AuthMessageData) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*AuthMessageData) UnmarshalJSON([]byte) error        { return nil }
func (AuthMessageData) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*AuthMessageData) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AuthMessageData *AuthMessageData

func (ErrorMessageData) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*ErrorMessageData) UnmarshalJSON([]byte) error        { return nil }
func (ErrorMessageData) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*ErrorMessageData) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ErrorMessageData *ErrorMessageData

func (InMessage) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*InMessage) UnmarshalJSON([]byte) error        { return nil }
func (InMessage) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*InMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_InMessage *InMessage

func (OkMessageData) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*OkMessageData) UnmarshalJSON([]byte) error        { return nil }
func (OkMessageData) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*OkMessageData) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OkMessageData *OkMessageData

func (OutMessage) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*OutMessage) UnmarshalJSON([]byte) error        { return nil }
func (OutMessage) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*OutMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OutMessage *OutMessage

func (RoomMessageData) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*RoomMessageData) UnmarshalJSON([]byte) error        { return nil }
func (RoomMessageData) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*RoomMessageData) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RoomMessageData *RoomMessageData

func (TickerMessageData) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*TickerMessageData) UnmarshalJSON([]byte) error        { return nil }
func (TickerMessageData) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*TickerMessageData) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TickerMessageData *TickerMessageData

func (WallMessageData) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*WallMessageData) UnmarshalJSON([]byte) error        { return nil }
func (WallMessageData) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*WallMessageData) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WallMessageData *WallMessageData
